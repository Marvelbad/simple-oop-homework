import lombok.experimental.UtilityClass;

import java.util.Arrays;
import java.util.Objects;

@UtilityClass
public final class PersonApp {

    /**
     * Display information about all employees
     */

    public  void displayAllEmployees(Employee[] employees) {
        if (employees == null) return;

        Arrays.stream(employees)
                .filter(Objects::nonNull)
                .forEach(Person::display);
    }

    /**
     * Calculate total salary expenses for all employees
     */

    public  double calculateTotalExpenses(Employee[] employees) {
        if (employees == null) throw new NullPointerException();

        return Arrays.stream(employees)
                .filter(Objects::nonNull)
                .mapToDouble(Employee::calculateSalary)
                .sum();
    }

    /**
     * Calculate total sales generated by SaleManagers
     */

    public  double calculateTotalSales(Employee[] employees) {
        if (employees == null) throw new NullPointerException();

        return Arrays.stream(employees)
                .filter(emp -> emp instanceof SaleManager)
                .map(employee -> (SaleManager) employee)
                .mapToDouble(SaleManager::getTotalSales)
                .sum();
    }

    /**
     * Check if an employee exists in the array
     */

    public  boolean findEmployee(Employee[] employees, Employee employee) {
        if (employees == null || employee == null) return false;

        return Arrays.asList(employees).contains(employee);
    }
}
